namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace cs = "http://purl.org/net/xbiblio/csl/2"

start = style | templates
# Style
# 
# Note: Currently this is the only place that uses interleave.
#       Could change it to an ordered list, and retain XSD compatability.
#       OTOH, this is very incomplete; not sure if there are other places
#       it would be useful.
style =
  element cs:style { info & templates? & citation? & bibliography? }
# Info

# Info Metadata

## TODO
info = element cs:info { text }
# data-types
csl.token = xsd:NMTOKEN
csl.token.list = xsd:NMTOKENS
# Citation
citation = element cs:citation { render.model }
# Bibliography
bibliography = element cs:bibliography { templates?, render.model }
# Templates
templates =
  element cs:templates {
    info?,
    element cs:template { render.model }+
  }
render.model =
  (render.list | render.item | template.conditional)+, template.atts
# Template
template = element cs:template { render.model }
template.atts =
  attribute cs:description { text }?,
  attribute cs:context { text }?,
  attribute cs:name { text }?,
  attribute cs:example { text }?
# Render

## Describes the rendering for an individual reference item.`
render.item = element cs:reference { render.atts, render.fmt }
render.atts =
  attribute cs:variable { render.vars }
  | attribute cs:str { text }
  | attribute cs:term { text }
  | attribute cs:template { csl.token }
render.vars =
  "author" | "editor" | "issued" | "title" | "cited-locators"
render.fmt =
  
  ## a template to call for partial rendering
  attribute cs:template { text }?,
  attribute cs:bold { xsd:boolean }?,
  attribute cs:prefix { text }?,
  attribute cs:suffix { text }?,
  
  ## an attribute whose value is a list of named csl.token operations that transform
  ## the input
  attribute cs:transforms { csl.token.list }?,
  attribute cs:substitute {
    list { render.vars }
  }?

## sort and group values; the included options here provide flexibility on how grouping
## happens in different context.
## TODO this in general needs more thought
sort-group.vals =
  "cs:author" | "cs:year" | "cs:author-year" | custom.att.val.pattern
# REVIEW does this allow non-spaced attributes?

## Allows foreign-namespaced attributes.
custom.atts = attribute * - cs:* { text }

## Allows custom pseudo namespace-prefixed attribute values.
custom.att.val.pattern =
  (xsd:NMTOKEN - (xsd:NMTOKEN { pattern = "^cs-.*" }))
# Render List element
render.list =
  element cs:list {
    render.model,
    
    ## REVIEW Will this work?
    ## if yes, could probably more flexibility
    attribute cs:sort { sort-group.vals }?,
    
    ## a list of variables (or templates?) to group by; a common value might be,
    ## for example, "author date.year"
    ## REVIEW should this be a token list?
    ## group-by="cs:author cs:year"?
    attribute cs:group-by {
      list { sort-group.vals }
    }?,
    
    ## we could do this with transforms, but don't need to
    ## and here we generalize this, so can work in different context
    (attribute cs:shorten-min { xsd:integer },
     attribute cs:shorten-use { xsd:integer })?,
    attribute cs:and-as { "symbol" | "term" }?,
    render.fmt,
    attribute cs:delimiter { text }?
  }

## Conditional
template.conditional =
  element cs:if { condition, render.model },
  element cs:if-then { condition, render.model }*,
  element cs:else { render.model }?
# TODO
condition = attribute cs:mode { "narrative" | "default" }
